# Мэрия Москвы основательно подготовилась к празднованию тысячелетия города в 2147 году,
# построив под столицей бесконечную асфальтированную площадку, чтобы заменить все существующие в городе автомобильные дороги.
# В память о кольцевых и радиальных дорогах разрешили двигаться по площадке только двумя способами:
#
# В сторону точки начала координат или от неё. При этом из точки начала координат разрешено двигаться в любом направлении.
# Вдоль окружности с центром в начале координат и радиусом, который равен текущему расстоянию до начала координат.
# Двигаться вдоль такой окружности разрешается в любом направлении (по или против часовой стрелки).
# Вам, как ведущему программисту ответственной инстанции поручено разработать модуль, который будет определять кратчайший путь из точки A,
# с координатами (xA, yA) в точку B с координатами (xB, yB). Считайте, что менять направление движения можно произвольное количество раз,
# но оно должно всегда соответствовать одному из двух описанных выше вариантов.
#
# Формат ввода
# В первой строке ввода заданы четыре целых числа xA, yA, xB и yB, по модулю не превосходящие 106.
#
# Формат вывода
# Выведите одно число — минимальное расстояние, которое придётся преодолеть по пути из точки A в точку B,
# если не нарушать правил дорожного движения. Ваш ответ будет принят, если его абсолютная или относительная погрешность не превосходит 10-6.

import math

def alg(xA, yA, xB, yB):
    if xA == xB and yA == yB:
        track = 0
    elif (xA == 0 and yA == 0) or (xB == 0 and yB == 0):
        track = math.sqrt(xA * xA + yA * yA + xB * xB + yB * yB)
    else:
        rA = math.sqrt(xA * xA + yA * yA)
        rB = math.sqrt(xB * xB + yB * yB)
        rMin = min(rA, rB)
        rDelta = max(rA, rB) - rMin

        angleA = math.atan2(yA, xA)
        angleB = math.atan2(yB, xB)
        angleDelta = max(angleA, angleB) - min(angleA, angleB)
        if angleDelta > math.pi:
            angleDelta = 2 * math.pi - angleDelta

        track = rDelta + min(2, angleDelta) * rMin
    return "{:.12f}".format(track)

xA, yA, xB, yB = map(int, input().split())
print(alg(xA, yA, xB, yB))







