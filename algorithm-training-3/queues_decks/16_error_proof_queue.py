# Научитесь пользоваться стандартной структурой данных queue для целых чисел. Напишите программу, содержащую
# описание очереди и моделирующую работу очереди, реализовав все указанные здесь методы.
# Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию.
# После выполнения каждой команды программа должна вывести одну строчку.
#
# Возможные команды для программы:
# push n - Добавить в очередь число n (значение n задается после команды). Программа должна вывести ok.
# pop - Удалить из очереди первый элемент. Программа должна вывести его значение.
# front - Программа должна вывести значение первого элемента, не удаляя его из очереди.
# size - Программа должна вывести количество элементов в очереди.
# clear - Программа должна очистить очередь и вывести ok.
# exit - Программа должна вывести bye и завершить работу.
#
# Перед исполнением операций front и pop программа должна проверять, содержится ли в очереди хотя бы один элемент.
# Если во входных данных встречается операция front или pop, и при этом очередь пуста, то программа должна вместо
# числового значения вывести строку error.

import sys

queue = []

for i in sys.stdin:
    lst = list(i.split())
    if lst[0] == "push":
        n = int(lst[1])
        queue.append(n)
        print("ok")
    elif lst[0] == "pop":
        if len(queue) == 0:
            print("error")
        else:
            print(queue.pop(0))
    elif lst[0] == "front":
        if len(queue) == 0:
            print("error")
        else:
            print(queue[0])
    elif lst[0] == "size":
        print(len(queue))
    elif lst[0] == "clear":
        queue.clear()
        print("ok")
    else:
        print("bye")
        break